// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReBalanced.Infastructure;

#nullable disable

namespace ReBalanced.Infastructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220226215725_Init2")]
    partial class Init2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.2");

            modelBuilder.Entity("ReBalanced.Domain.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AccountType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HoldingType")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PortfolioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioId");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("ReBalanced.Domain.Entities.Allocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PortfolioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioId");

                    b.ToTable("Allocation");
                });

            modelBuilder.Entity("ReBalanced.Domain.Entities.Asset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Asset");
                });

            modelBuilder.Entity("ReBalanced.Domain.Entities.Holding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AssetId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("AssetId");

                    b.ToTable("Holding");
                });

            modelBuilder.Entity("ReBalanced.Domain.Entities.Portfolio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Portfolio");
                });

            modelBuilder.Entity("ReBalanced.Domain.Entities.Account", b =>
                {
                    b.HasOne("ReBalanced.Domain.Entities.Portfolio", null)
                        .WithMany("Accounts")
                        .HasForeignKey("PortfolioId");
                });

            modelBuilder.Entity("ReBalanced.Domain.Entities.Allocation", b =>
                {
                    b.HasOne("ReBalanced.Domain.Entities.Portfolio", null)
                        .WithMany("Allocations")
                        .HasForeignKey("PortfolioId");
                });

            modelBuilder.Entity("ReBalanced.Domain.Entities.Holding", b =>
                {
                    b.HasOne("ReBalanced.Domain.Entities.Account", null)
                        .WithMany("Holdings")
                        .HasForeignKey("AccountId");

                    b.HasOne("ReBalanced.Domain.Entities.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("ReBalanced.Domain.Entities.Account", b =>
                {
                    b.Navigation("Holdings");
                });

            modelBuilder.Entity("ReBalanced.Domain.Entities.Portfolio", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Allocations");
                });
#pragma warning restore 612, 618
        }
    }
}
